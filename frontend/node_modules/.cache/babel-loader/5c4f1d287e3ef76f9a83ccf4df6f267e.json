{"ast":null,"code":"import _slicedToArray from \"/Users/macuser/Desktop/Helio Solar/heliosolar.ca/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useCallback, useState } from 'react';\nfunction useMap() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Map();\n  var _useState = useState(new Map(initialState)),\n    _useState2 = _slicedToArray(_useState, 2),\n    map = _useState2[0],\n    setMap = _useState2[1];\n  var actions = {\n    set: useCallback(function (key, value) {\n      setMap(function (prev) {\n        var copy = new Map(prev);\n        copy.set(key, value);\n        return copy;\n      });\n    }, []),\n    setAll: useCallback(function (entries) {\n      setMap(function () {\n        return new Map(entries);\n      });\n    }, []),\n    remove: useCallback(function (key) {\n      setMap(function (prev) {\n        var copy = new Map(prev);\n        copy.delete(key);\n        return copy;\n      });\n    }, []),\n    reset: useCallback(function () {\n      setMap(function () {\n        return new Map();\n      });\n    }, [])\n  };\n  return [map, actions];\n}\nexport default useMap;","map":{"version":3,"names":["useCallback","useState","useMap","initialState","Map","map","setMap","actions","set","key","value","prev","copy","setAll","entries","remove","delete","reset"],"sources":["/Users/macuser/Desktop/Helio Solar/heliosolar.ca/frontend/node_modules/usehooks-ts/dist/esm/useMap/useMap.js"],"sourcesContent":["import { useCallback, useState } from 'react';\nfunction useMap(initialState = new Map()) {\n    const [map, setMap] = useState(new Map(initialState));\n    const actions = {\n        set: useCallback((key, value) => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.set(key, value);\n                return copy;\n            });\n        }, []),\n        setAll: useCallback(entries => {\n            setMap(() => new Map(entries));\n        }, []),\n        remove: useCallback(key => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.delete(key);\n                return copy;\n            });\n        }, []),\n        reset: useCallback(() => {\n            setMap(() => new Map());\n        }, []),\n    };\n    return [map, actions];\n}\nexport default useMap;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C,SAASC,MAAM,GAA2B;EAAA,IAA1BC,YAAY,uEAAG,IAAIC,GAAG,EAAE;EACpC,gBAAsBH,QAAQ,CAAC,IAAIG,GAAG,CAACD,YAAY,CAAC,CAAC;IAAA;IAA9CE,GAAG;IAAEC,MAAM;EAClB,IAAMC,OAAO,GAAG;IACZC,GAAG,EAAER,WAAW,CAAC,UAACS,GAAG,EAAEC,KAAK,EAAK;MAC7BJ,MAAM,CAAC,UAAAK,IAAI,EAAI;QACX,IAAMC,IAAI,GAAG,IAAIR,GAAG,CAACO,IAAI,CAAC;QAC1BC,IAAI,CAACJ,GAAG,CAACC,GAAG,EAAEC,KAAK,CAAC;QACpB,OAAOE,IAAI;MACf,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC;IACNC,MAAM,EAAEb,WAAW,CAAC,UAAAc,OAAO,EAAI;MAC3BR,MAAM,CAAC;QAAA,OAAM,IAAIF,GAAG,CAACU,OAAO,CAAC;MAAA,EAAC;IAClC,CAAC,EAAE,EAAE,CAAC;IACNC,MAAM,EAAEf,WAAW,CAAC,UAAAS,GAAG,EAAI;MACvBH,MAAM,CAAC,UAAAK,IAAI,EAAI;QACX,IAAMC,IAAI,GAAG,IAAIR,GAAG,CAACO,IAAI,CAAC;QAC1BC,IAAI,CAACI,MAAM,CAACP,GAAG,CAAC;QAChB,OAAOG,IAAI;MACf,CAAC,CAAC;IACN,CAAC,EAAE,EAAE,CAAC;IACNK,KAAK,EAAEjB,WAAW,CAAC,YAAM;MACrBM,MAAM,CAAC;QAAA,OAAM,IAAIF,GAAG,EAAE;MAAA,EAAC;IAC3B,CAAC,EAAE,EAAE;EACT,CAAC;EACD,OAAO,CAACC,GAAG,EAAEE,OAAO,CAAC;AACzB;AACA,eAAeL,MAAM"},"metadata":{},"sourceType":"module"}