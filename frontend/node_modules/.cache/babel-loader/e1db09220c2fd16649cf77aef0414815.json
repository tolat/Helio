{"ast":null,"code":"import _slicedToArray from \"/Users/macuser/Desktop/Helio Solar/heliosolar.ca/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\nimport { useLocalStorage, useMediaQuery, useUpdateEffect } from '..';\nvar COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';\nfunction useTernaryDarkMode() {\n  var isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY);\n  var _useLocalStorage = useLocalStorage('usehooks-ts-ternary-dark-mode', 'system'),\n    _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n    ternaryDarkMode = _useLocalStorage2[0],\n    setTernaryDarkMode = _useLocalStorage2[1];\n  var _useState = useState(isDarkOS),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDarkMode = _useState2[0],\n    setDarkMode = _useState2[1];\n  useUpdateEffect(function () {\n    if (ternaryDarkMode === 'system') {\n      setDarkMode(isDarkOS);\n    }\n  }, [isDarkOS]);\n  useEffect(function () {\n    switch (ternaryDarkMode) {\n      case 'light':\n        setDarkMode(false);\n        break;\n      case 'system':\n        setDarkMode(isDarkOS);\n        break;\n      case 'dark':\n        setDarkMode(true);\n        break;\n    }\n  }, [ternaryDarkMode, isDarkOS]);\n  function toggleTernaryDarkMode() {\n    var toggleDict = {\n      light: 'system',\n      system: 'dark',\n      dark: 'light'\n    };\n    setTernaryDarkMode(function (prevMode) {\n      return toggleDict[prevMode];\n    });\n  }\n  return {\n    isDarkMode: isDarkMode,\n    ternaryDarkMode: ternaryDarkMode,\n    setTernaryDarkMode: setTernaryDarkMode,\n    toggleTernaryDarkMode: toggleTernaryDarkMode\n  };\n}\nexport default useTernaryDarkMode;","map":{"version":3,"names":["useEffect","useState","useLocalStorage","useMediaQuery","useUpdateEffect","COLOR_SCHEME_QUERY","useTernaryDarkMode","isDarkOS","ternaryDarkMode","setTernaryDarkMode","isDarkMode","setDarkMode","toggleTernaryDarkMode","toggleDict","light","system","dark","prevMode"],"sources":["/Users/macuser/Desktop/Helio Solar/heliosolar.ca/frontend/node_modules/usehooks-ts/dist/esm/useTernaryDarkMode/useTernaryDarkMode.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useLocalStorage, useMediaQuery, useUpdateEffect } from '..';\nconst COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';\nfunction useTernaryDarkMode() {\n    const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY);\n    const [ternaryDarkMode, setTernaryDarkMode] = useLocalStorage('usehooks-ts-ternary-dark-mode', 'system');\n    const [isDarkMode, setDarkMode] = useState(isDarkOS);\n    useUpdateEffect(() => {\n        if (ternaryDarkMode === 'system') {\n            setDarkMode(isDarkOS);\n        }\n    }, [isDarkOS]);\n    useEffect(() => {\n        switch (ternaryDarkMode) {\n            case 'light':\n                setDarkMode(false);\n                break;\n            case 'system':\n                setDarkMode(isDarkOS);\n                break;\n            case 'dark':\n                setDarkMode(true);\n                break;\n        }\n    }, [ternaryDarkMode, isDarkOS]);\n    function toggleTernaryDarkMode() {\n        const toggleDict = {\n            light: 'system',\n            system: 'dark',\n            dark: 'light',\n        };\n        setTernaryDarkMode(prevMode => toggleDict[prevMode]);\n    }\n    return {\n        isDarkMode,\n        ternaryDarkMode,\n        setTernaryDarkMode,\n        toggleTernaryDarkMode,\n    };\n}\nexport default useTernaryDarkMode;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,EAAEC,aAAa,EAAEC,eAAe,QAAQ,IAAI;AACpE,IAAMC,kBAAkB,GAAG,8BAA8B;AACzD,SAASC,kBAAkB,GAAG;EAC1B,IAAMC,QAAQ,GAAGJ,aAAa,CAACE,kBAAkB,CAAC;EAClD,uBAA8CH,eAAe,CAAC,+BAA+B,EAAE,QAAQ,CAAC;IAAA;IAAjGM,eAAe;IAAEC,kBAAkB;EAC1C,gBAAkCR,QAAQ,CAACM,QAAQ,CAAC;IAAA;IAA7CG,UAAU;IAAEC,WAAW;EAC9BP,eAAe,CAAC,YAAM;IAClB,IAAII,eAAe,KAAK,QAAQ,EAAE;MAC9BG,WAAW,CAACJ,QAAQ,CAAC;IACzB;EACJ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACdP,SAAS,CAAC,YAAM;IACZ,QAAQQ,eAAe;MACnB,KAAK,OAAO;QACRG,WAAW,CAAC,KAAK,CAAC;QAClB;MACJ,KAAK,QAAQ;QACTA,WAAW,CAACJ,QAAQ,CAAC;QACrB;MACJ,KAAK,MAAM;QACPI,WAAW,CAAC,IAAI,CAAC;QACjB;IAAM;EAElB,CAAC,EAAE,CAACH,eAAe,EAAED,QAAQ,CAAC,CAAC;EAC/B,SAASK,qBAAqB,GAAG;IAC7B,IAAMC,UAAU,GAAG;MACfC,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;IACV,CAAC;IACDP,kBAAkB,CAAC,UAAAQ,QAAQ;MAAA,OAAIJ,UAAU,CAACI,QAAQ,CAAC;IAAA,EAAC;EACxD;EACA,OAAO;IACHP,UAAU,EAAVA,UAAU;IACVF,eAAe,EAAfA,eAAe;IACfC,kBAAkB,EAAlBA,kBAAkB;IAClBG,qBAAqB,EAArBA;EACJ,CAAC;AACL;AACA,eAAeN,kBAAkB"},"metadata":{},"sourceType":"module"}