{"ast":null,"code":"import _slicedToArray from \"/Users/macuser/Desktop/Helio Solar/heliosolar.ca/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\nfunction useMediaQuery(query) {\n  var getMatches = function getMatches(query) {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n    return false;\n  };\n  var _useState = useState(getMatches(query)),\n    _useState2 = _slicedToArray(_useState, 2),\n    matches = _useState2[0],\n    setMatches = _useState2[1];\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n  useEffect(function () {\n    var matchMedia = window.matchMedia(query);\n    handleChange();\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener('change', handleChange);\n    }\n    return function () {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener('change', handleChange);\n      }\n    };\n  }, [query]);\n  return matches;\n}\nexport default useMediaQuery;","map":{"version":3,"names":["useEffect","useState","useMediaQuery","query","getMatches","window","matchMedia","matches","setMatches","handleChange","addListener","addEventListener","removeListener","removeEventListener"],"sources":["/Users/macuser/Desktop/Helio Solar/heliosolar.ca/frontend/node_modules/usehooks-ts/dist/esm/useMediaQuery/useMediaQuery.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nfunction useMediaQuery(query) {\n    const getMatches = (query) => {\n        if (typeof window !== 'undefined') {\n            return window.matchMedia(query).matches;\n        }\n        return false;\n    };\n    const [matches, setMatches] = useState(getMatches(query));\n    function handleChange() {\n        setMatches(getMatches(query));\n    }\n    useEffect(() => {\n        const matchMedia = window.matchMedia(query);\n        handleChange();\n        if (matchMedia.addListener) {\n            matchMedia.addListener(handleChange);\n        }\n        else {\n            matchMedia.addEventListener('change', handleChange);\n        }\n        return () => {\n            if (matchMedia.removeListener) {\n                matchMedia.removeListener(handleChange);\n            }\n            else {\n                matchMedia.removeEventListener('change', handleChange);\n            }\n        };\n    }, [query]);\n    return matches;\n}\nexport default useMediaQuery;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,CAACC,KAAK,EAAE;EAC1B,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAID,KAAK,EAAK;IAC1B,IAAI,OAAOE,MAAM,KAAK,WAAW,EAAE;MAC/B,OAAOA,MAAM,CAACC,UAAU,CAACH,KAAK,CAAC,CAACI,OAAO;IAC3C;IACA,OAAO,KAAK;EAChB,CAAC;EACD,gBAA8BN,QAAQ,CAACG,UAAU,CAACD,KAAK,CAAC,CAAC;IAAA;IAAlDI,OAAO;IAAEC,UAAU;EAC1B,SAASC,YAAY,GAAG;IACpBD,UAAU,CAACJ,UAAU,CAACD,KAAK,CAAC,CAAC;EACjC;EACAH,SAAS,CAAC,YAAM;IACZ,IAAMM,UAAU,GAAGD,MAAM,CAACC,UAAU,CAACH,KAAK,CAAC;IAC3CM,YAAY,EAAE;IACd,IAAIH,UAAU,CAACI,WAAW,EAAE;MACxBJ,UAAU,CAACI,WAAW,CAACD,YAAY,CAAC;IACxC,CAAC,MACI;MACDH,UAAU,CAACK,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IACvD;IACA,OAAO,YAAM;MACT,IAAIH,UAAU,CAACM,cAAc,EAAE;QAC3BN,UAAU,CAACM,cAAc,CAACH,YAAY,CAAC;MAC3C,CAAC,MACI;QACDH,UAAU,CAACO,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;MAC1D;IACJ,CAAC;EACL,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EACX,OAAOI,OAAO;AAClB;AACA,eAAeL,aAAa"},"metadata":{},"sourceType":"module"}